// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: updateOrders.sql

package sqlc

import (
	"context"
)

const listWaitingOrders = `-- name: ListWaitingOrders :many
select id, user_id, num, date_insert, accrual, status from gopher_orders where status not in ('INVALID', 'PROCESSED')
`

func (q *Queries) ListWaitingOrders(ctx context.Context) ([]GopherOrder, error) {
	rows, err := q.db.Query(ctx, listWaitingOrders)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GopherOrder
	for rows.Next() {
		var i GopherOrder
		if err := rows.Scan(
			&i.ID,
			&i.UserID,
			&i.Num,
			&i.DateInsert,
			&i.Accrual,
			&i.Status,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
